{"version":3,"sources":["logo.svg","Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["Calendar","myDate","moment","this","props","date","weekArray","arr","weekdays","shifted","shift","push","get_weekarray","prev_mo_days","day_first","startOf","day","prev_mon_days","next_mo_days","day_last","endOf","next_mon_days","allflat","last_m_days","i","datei","format","unshift","parseInt","next_m_days","add","cur_mo_count","cur_mo_days","daysInMonth","console","log","flat","count_all_days","weekarrays","length","splice","get_weekarrays","smallweeks","firstweek","prevmondays","threemoreweeks","slice","lastweek","nextmondays","popped","pop","get_small_weeks","newWeekArr","map","item","class","getDay","getFullYear","className","scope","title","subitem","Component","now","Date","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.819e0ca5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport default class Calendar extends Component {\r\n  render() {\r\n    let myDate = moment(this.props.date);\r\n    //first and last day of current month\r\n\r\n    let weekArray = get_weekarray();\r\n\r\n    //  let next_mo_days;\r\n    //  let allflat;\r\n    //  let weekArray;\r\n    //  let weekarrays;\r\n    //  let smallweeks = [];\r\n    //  let  newWeekArr;\r\n\r\n    function prev_mon_days() {\r\n      const firstdate = moment(myDate).startOf(\"month\");\r\n      // .format(\"DD-MM-YYYY\");\r\n      let day_first = firstdate.day();\r\n\r\n      // Sunday - Saturday : 0 - 6\r\n      //trailing days of prev mo, count\r\n      let prev_mo_days = 0;\r\n\r\n      if (day_first == 0) {\r\n        prev_mo_days = 6;\r\n      } else {\r\n        prev_mo_days = day_first - 1;\r\n      }\r\n\r\n      return prev_mo_days;\r\n    }\r\n\r\n    let prev_mo_days = prev_mon_days();\r\n    //\r\n    function next_mon_days() {\r\n      const lastdate = moment(myDate).endOf(\"month\");\r\n      let day_last = lastdate.day();\r\n\r\n      let next_mo_days = 0;\r\n      if (day_last != 0) {\r\n        next_mo_days = 7 - day_last;\r\n      }\r\n\r\n      return next_mo_days;\r\n    }\r\n\r\n    let next_mo_days = next_mon_days();\r\n\r\n    //\r\n    function count_all_days() {\r\n      let last_m_days = [];\r\n      for (let i = 0; i > -prev_mo_days; i--) {\r\n        const datei = moment(myDate).date(i).format(\"DD\");\r\n        last_m_days.unshift(parseInt(datei));\r\n      }\r\n\r\n      //trailing next month DATES\r\n\r\n      let next_m_days = [];\r\n      for (let i = 1; i < next_mo_days + 1; i++) {\r\n        const datei = moment(myDate).add(1, \"months\").date(i).format(\"DD\");\r\n        next_m_days.push(parseInt(datei));\r\n      }\r\n\r\n      //days in our month\r\n      let cur_mo_count = [];\r\n      let cur_mo_days = moment(myDate).daysInMonth();\r\n      console.log(cur_mo_days);\r\n      for (let i = 1; i <= cur_mo_days; i++) {\r\n        cur_mo_count.push(i);\r\n      }\r\n\r\n      // console.log(\"last prev\" + date0.format(\"YYYY-MM-DD\"));\r\n\r\n      // let last_mo_name = moment(last_mo+1, 'M').format('MMMM');\r\n\r\n      let alldays = [...last_m_days, cur_mo_count, next_m_days];\r\n      let allflat = alldays.flat(1);\r\n\r\n      return allflat;\r\n    }\r\n\r\n    let allflat = count_all_days();\r\n\r\n    //\r\n    function get_weekarray() {\r\n      let arr = moment.weekdays();\r\n      var shifted = arr.shift();\r\n      arr.push(shifted);\r\n\r\n      return arr;\r\n    }\r\n\r\n    //\r\n\r\n    function get_weekarrays() {\r\n      let weekarrays = [],\r\n        size = 7;\r\n\r\n      while (allflat.length > 0) weekarrays.push(allflat.splice(0, size));\r\n\r\n      return weekarrays;\r\n    }\r\n\r\n    let weekarrays = get_weekarrays();\r\n    //\r\n\r\n    function get_small_weeks() {\r\n      let smallweeks = [];\r\n      let firstweek = weekarrays[0];\r\n      let prevmondays = firstweek.splice(0, prev_mo_days);\r\n\r\n      smallweeks.push(prevmondays);\r\n      smallweeks.push(firstweek);\r\n\r\n      let threemoreweeks = weekarrays.slice(1, weekarrays.length - 1);\r\n      smallweeks.push(threemoreweeks);\r\n      //last week split\r\n\r\n      let lastweek = weekarrays[weekarrays.length - 1];\r\n      let nextmondays = [];\r\n      for (let i = 0; i < next_mo_days; i++) {\r\n        let popped = lastweek.pop();\r\n        nextmondays.unshift(popped);\r\n      }\r\n      smallweeks.push(lastweek);\r\n      smallweeks.push(nextmondays);\r\n      return smallweeks;\r\n    }\r\n\r\n    //\r\n\r\n    function get_newArr() {\r\n      return weekArray.map((item) => {\r\n        return item.slice(0, 3);\r\n      });\r\n    }\r\n\r\n    let smallweeks = get_small_weeks();\r\n\r\n    let newWeekArr = get_newArr();\r\n\r\n    return (\r\n      <div class=\"ui-datepicker\">\r\n        <div class=\"ui-datepicker-material-header\">\r\n          <div class=\"ui-datepicker-material-day\">\r\n            {weekArray[this.props.date.getDay() - 1]}\r\n          </div>\r\n          <div class=\"ui-datepicker-material-date\">\r\n            <div class=\"ui-datepicker-material-day-num\">\r\n              {moment(myDate).format(\"DD\")}\r\n            </div>\r\n            <div class=\"ui-datepicker-material-month\">\r\n              {moment(myDate).format(\"MMM\")}\r\n            </div>\r\n            <div class=\"ui-datepicker-material-year\">\r\n              {this.props.date.getFullYear()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"ui-datepicker-header\">\r\n          <div class=\"ui-datepicker-title\">\r\n            <span class=\"ui-datepicker-month\">\r\n              {moment(myDate).format(\"MMMM\")}\r\n            </span>\r\n            &nbsp;\r\n            <span class=\"ui-datepicker-year\">\r\n              {this.props.date.getFullYear()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <table class=\"ui-datepicker-calendar\">\r\n          <colgroup>\r\n            <col />\r\n            <col />\r\n            <col />\r\n            <col />\r\n            <col />\r\n            <col className=\"ui-datepicker-week-end\" />\r\n            <col className=\"ui-datepicker-week-end\" />\r\n          </colgroup>\r\n          <thead>\r\n            <tr>\r\n              {newWeekArr.map((item, i) => (\r\n                <th key={i} scope=\"col\" title=\"item\">\r\n                  {item}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              {smallweeks[0].map((item, i) => (\r\n                <td key={i} className=\"ui-datepicker-other-month\">\r\n                  {item}\r\n                </td>\r\n              ))}\r\n              {smallweeks[1].map((item, i) => (\r\n                <td\r\n                  key={i}\r\n                  className={\r\n                    item == +moment(myDate).format(\"DD\")\r\n                      ? \"ui-datepicker-today\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {item}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n            {smallweeks[2].map((item, i) => (\r\n              <tr key={i}>\r\n                {item.map((subitem, i) => (\r\n                  <td\r\n                    key={i}\r\n                    className={\r\n                      subitem == +moment(myDate).format(\"DD\")\r\n                        ? \"ui-datepicker-today\"\r\n                        : \"\"\r\n                    }\r\n                  >\r\n                    {subitem}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              {smallweeks[3].map((item, i) => (\r\n                <td\r\n                  key={i}\r\n                  className={\r\n                    item == +moment(myDate).format(\"DD\")\r\n                      ? \"ui-datepicker-today\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {item}\r\n                </td>\r\n              ))}\r\n              {smallweeks[4].map((item, i) => (\r\n                <td key={i} className=\"ui-datepicker-other-month\">\r\n                  {item}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Calendar from './Calendar'\n\nconst now = new Date(2021,2,8);\n\n// внутри компонента App:\n\nfunction App() {\n  return (\n    <Calendar date={now} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}