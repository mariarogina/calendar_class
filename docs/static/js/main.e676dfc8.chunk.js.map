{"version":3,"sources":["logo.svg","Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["console","info","moment","log","firstdate","startOf","lastdate","endOf","day_first","day","day_last","prev_mo_days","next_mo_days","current_mo","month","next_mo","format","add","last_m_days","i","datei","date","unshift","parseInt","next_m_days","push","cur_mo_count","cur_mo_days","daysInMonth","allflat","flat","alldayslen","length","num_rows","weekArray","weekdays","shifted","shift","weekarrays","splice","newWeekArr","map","item","slice","Calendar","class","this","props","getDay","getFullYear","scope","title","subitem","Component","now","Date","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e676dfc8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\n\r\nconsole.info(moment)\r\n\r\n//first and last day of current month\r\nconsole.log(\"current month first date\");\r\n    const firstdate = moment().startOf('month');\r\nconsole.log(firstdate);\r\n\r\nconsole.log(\"current month last date\");\r\n    const lastdate=moment().endOf('month');\r\n    // .format(\"DD-MM-YYYY\"); \r\nconsole.log(lastdate);\r\n\r\nconst day_first = firstdate.day();\r\nconst day_last = lastdate.day();\r\n// Sunday - Saturday : 0 - 6\r\n\r\nconsole.log(day_first, day_last);\r\n\r\n//trailing days of prev mo, count\r\nlet prev_mo_days = 0;\r\nif (day_first != 0) {\r\n    prev_mo_days = day_first-1;\r\n}\r\nconsole.log(prev_mo_days)\r\n\r\n//trailing days of next mo, count\r\nlet next_mo_days = 0;\r\nif (day_last != 7) {\r\n    next_mo_days = 7-day_last;\r\n}\r\nconsole.log(next_mo_days)\r\n\r\n//current, next and prev months\r\nvar current_mo = moment().month() + 1;\r\nlet current_mo_name = moment(current_mo, 'M').format('MMMM');\r\n// ;\r\nlet next_mo = moment().add(1, 'months').month();\r\nlet next_mo_name = moment(next_mo+1, 'M').format('MMMM');\r\nlet last_mo = moment().add(-1, 'months').month();\r\n\r\n//trailing last month DATES\r\n\r\nlet last_m_days = []\r\nfor (let i=0; i>(-prev_mo_days); i--){\r\n    const datei = moment().date(i).format(\"DD\");\r\n    last_m_days.unshift(parseInt(datei));\r\n}\r\n\r\nconsole.log(last_m_days);\r\n\r\n//trailing next month DATES\r\n\r\nlet next_m_days = []\r\nfor (let i=1; i<next_mo_days+1; i++){\r\n    const datei = moment().add(1, 'months').date(i).format(\"DD\");\r\n    next_m_days.push(parseInt(datei));\r\n}\r\n\r\nconsole.log(next_m_days);\r\n\r\n//days in our month \r\nlet cur_mo_count = []\r\nlet cur_mo_days = moment().daysInMonth();\r\nconsole.log(cur_mo_days)\r\nfor (let i = 1; i <= cur_mo_days; i ++) {\r\n    cur_mo_count.push(i);\r\n  }\r\n\r\n  console.log(\"our month\" + cur_mo_count)\r\n\r\n// console.log(\"last prev\" + date0.format(\"YYYY-MM-DD\"));\r\n\r\n// let last_mo_name = moment(last_mo+1, 'M').format('MMMM');\r\n\r\n\r\n\r\n// console.log( current_mo_name, next_mo_name, last_mo_name)\r\n\r\n\r\nlet alldays = [... last_m_days, cur_mo_count, next_m_days];\r\nconst allflat = alldays.flat(1)\r\nlet alldayslen = allflat.length;\r\nconsole.log(\"ALL\" + alldayslen)\r\n\r\nlet num_rows = alldayslen/7;\r\nconsole.log(\"rows\" +  \" \" + num_rows)\r\n\r\n//our header cells\r\nlet weekArray = moment.weekdays()\r\n\r\n\r\nvar shifted = weekArray.shift();\r\nweekArray.push(shifted)\r\n\r\nconsole.log(weekArray);\r\n\r\nvar weekarrays = [], size = 7;\r\n    \r\nwhile (allflat.length > 0)\r\n  weekarrays.push(allflat.splice(0, size));\r\n\r\nconsole.log(weekarrays);\r\n\r\n let newWeekArr = weekArray.map((item) => {return item.slice(0,3)});\r\n console.log(newWeekArr);\r\n\r\n \r\nexport default class Calendar extends Component {\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n           <div class=\"ui-datepicker\">\r\n  <div class=\"ui-datepicker-material-header\">\r\n    <div class=\"ui-datepicker-material-day\">{weekArray[this.props.date.getDay()-1]}</div>\r\n    <div class=\"ui-datepicker-material-date\">\r\n      <div class=\"ui-datepicker-material-day-num\">{moment().format(\"DD\")}</div>\r\n      <div class=\"ui-datepicker-material-month\">{moment().format(\"MMM\")}</div>\r\n      <div class=\"ui-datepicker-material-year\">{this.props.date.getFullYear()}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"ui-datepicker-header\">\r\n    <div class=\"ui-datepicker-title\">\r\n      <span class=\"ui-datepicker-month\">{moment(this.props.date).format('MMMM')}</span>&nbsp;<span class=\"ui-datepicker-year\">{this.props.date.getFullYear()}</span>\r\n    </div>\r\n  </div>\r\n  <table class=\"ui-datepicker-calendar\">\r\n    <colgroup>\r\n      <col/>\r\n      <col/>\r\n      <col/>\r\n      <col/>\r\n      <col/>\r\n      <col/>\r\n      <col/>\r\n    </colgroup>\r\n    <thead>\r\n      <tr>\r\n      {newWeekArr.map((item) => (<th scope=\"col\" title=\"item\">{item}</th>))}\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n   { weekarrays.map((item,i) => (<tr>{item.map(subitem => <td>{subitem}</td>)}</tr>) )}\r\n      \r\n    </tbody>\r\n  </table>\r\n  </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Calendar from './Calendar'\n\nconst now = new Date();\n\n// внутри компонента App:\n\nfunction App() {\n  return (\n    <Calendar date={now} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}